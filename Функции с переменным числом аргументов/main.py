# Kлассная работа
# Чеширский указатель
# Чеширский кот в качестве указателя направления движения — не самый лучший выбор. Но если вам все равно куда идти, подойдет и такой. Главное, не придираться к словам. Иначе это далеко может вас завести. Со словами надо поаккуратней.
#
# Напишите программу, которая из предложенных слов выберет те, что находятся внутри заданного диапазона.
#
# Формат ввода
# Вводится строка, в которой все значения разделены пробелами. На первом и последнем местах находятся соответственно слова, означающие начало и конец интервала. Из всех остальных нужно выбрать только те, что попадают внутрь интервала, включая концы, если их рассматривать без учёта регистра.
#
# Формат вывода
# Вывести выбранные слова в произвольном порядке через пробел.
#
# Пример 1
# Ввод	Вывод
# Fury said to a mouse That he met in the house
# he
# Пример 2
# Ввод	Вывод
# How I wonder what you're at Twinkle twinkle little bat Up above the world you fly Like a tea-tray in the sky
# I little Like in
# Примечания
# Использовать множественное присваивание и распаковывание коллекции при выводе обязательно!
# text = input().split()
# sp = []
# start, end = text[0].lower(), text[-1].lower()
# for i in text[1:-1]:
#     if start <= i.lower() <= end:
#         sp.append(i)
# print(*sp)


# Накопление
def accumulation(*data):
    res = [0]
    for i in data:
        res.append(res[-1] + i)
    return res


# Матрица
def matrix(n=1, m=0, a=0):
    if n == 1 and not m:
        m = 1
    elif n != 1 and not m:
        m = n
    return [[a for _ in range(m)] for _ in range(n)]


# Бариста
ingredient = {'Эспрессо': [1, 0, 0], 'Капучино': [1, 3, 0],
              'Маккиато': [2, 1, 0], 'Кофе по-венски': [1, 0, 2],
              'Латте Маккиато': [1, 2, 1], 'Кон Панна': [1, 0, 1]}


def choose_coffee(*args):
    for i in args:
        if ingredient[i][0] <= ingredients[0] and ingredient[i][1] <= ingredients[1] and ingredient[i][2] <= \
                ingredients[2]:
            ingredients[0] -= ingredient[i][0]
            ingredients[1] -= ingredient[i][1]
            ingredients[2] -= ingredient[i][2]
            return i
    return 'К сожалению, не можем предложить Вам напиток'


ingredients = [1, 2, 3]
print(choose_coffee("Эспрессо", "Капучино", "Маккиато", "Кофе по-венски", "Латте Маккиато", "Кон Панна"))
print(choose_coffee("Эспрессо", "Капучино", "Маккиато", "Кофе по-венски", "Латте Маккиато", "Кон Панна"))


# Спамогенератор
def spam(email, name, date, place='Магнитогорске'):
    print(f'To: {email}\n'
          f'Здраствуйте, {name}!\n'
          f'Были бы рады видеть вас на встрече начинающих программистов в {place},\n'
          f'которая пройдет {date}.')


# Домашняя работа
# Частичные суммы
def partial_sums(*args):
    sp = [0]
    for i in range(len(args)):
        sp.append(sp[i] + args[i])
    return sp

# Занято

# Цезарь

# Дополнительные задачи
# Дартс

# Заменитель

# Уравнения степени не выше второй — часть 2

# Уравнения степени не выше второй — часть 3

# Наиболее вероятное будущее
